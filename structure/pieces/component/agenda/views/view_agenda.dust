{>"layout_MODULE_NAME"/}
{<custom_css_2}
	<link href='/css/jQueryUI/1.12.1/jquery-ui.min.css' rel='stylesheet' />
	<link href='/css/fullcalendar/fullcalendar.min.css' rel='stylesheet' />
	<link href='/css/fullcalendar/fullcalendar.print.min.css' rel='stylesheet' media='print' />
	<link href='/css/AdminLteV2/alt/AdminLTE-fullcalendar.min.css' rel='stylesheet' />
	<link href='/css/fullcalendar/scheduler.css' rel='stylesheet' />
	<style>
		.pendingEvent{
			padding: 5px 5px 5px 12px;
			border-radius: 3px;
			margin-bottom: 5px;
			cursor: pointer;
		}
	</style>
{/custom_css_2}
{<header}
	<h1>
		{@__ key="module.m_home"/}
		<small>{@__ key="module.module"/}</small>
	</h1>
	<ol class='breadcrumb'>
		<li>
			<a href='#'>
				<i class='fa fa-home'></i>
				{@__ key="module.home"/}
			</a>
		</li>
		<li class='active'>
			{@__ key="module.m_home"/}
		</li>
	</ol>
{/header}

{<content}
	<div class='row'>
		<div class='col-xs-12 col-md-3'>
			<div class="box">
                <div class="box-header">
                    <h3 class="box-title">{@__ key="global_component.agenda.add_event"/}</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                        <i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                	<select style="width: 100%;" class="form-control selectCategoryColor" id="selectCategorySide">
                		<option data-backgroundcolor="#CCCCCC" value="">{@__ key="global_component.agenda.no_category"/}</option>
						{#categories}
							<option data-backgroundcolor="{f_color}" value="{id}">{f_label}</option>
						{/categories}
					</select>
					<div style="margin-top: 10px;" class="input-group">
						<input id="new-event-title" type="text" placeholder='{@__ key="entity.CODE_NAME_EVENT_LOWER.f_title"/}' class="form-control"/>
						<div class="input-group-btn">
							<button id="add-new-event" type="button" class="btn btn-success btn-flat">{@__ key="button.add"/}</button>
						</div>
					</div>
                </div>
            </div>
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">{@__ key="global_component.agenda.pending_event"/}</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                        <i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                	<div id="pengingEventList">
					</div>
                </div>
            </div>
		</div>
		<div class='col-xs-12 col-md-9'>
			<div class="box">
                <div class="box-header">
                    <h3 class="box-title">{@__ key="component.CODE_NAME_LOWER.label_component" /}</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                        <i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
					<div id="calendar"></div>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="eventCreateModal" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
					<h4 class="modal-title" id="myModalLabel">Créer un évenement</h4>
				</div>
				<div class="modal-body">
					<input type="hidden" id="modalCreateStartDate" >
					<input type="hidden" id="modalCreateUser" >
					<select style="width: 100%;" class="form-control selectCategoryColor" id="modalCreateCategory">
						<option data-backgroundcolor="#CCCCCC" value="">{@__ key="global_component.agenda.no_category"/}</option>
						{#categories}
							<option data-backgroundcolor="{f_color}" value="{id}">{f_label}</option>
						{/categories}
					</select>
					<div style="margin-top: 10px;width: 100%;" class="input-group">
						<input type="text" id="modalCreateTitle" placeholder='{@__ key="entity.CODE_NAME_EVENT_LOWER.f_title"/}' class="form-control" autofocus/>
					</div>
					<div style="margin-top: 10px" class='bootstrap-timepicker'>
						<label>{@__ key="entity.CODE_NAME_EVENT_LOWER.f_all_day"/}</label><br>
						<input class='form-control input' id="createEventAllDayCheckbox" type='checkbox'>
                	</div>
					<div style="margin-top: 10px" class='bootstrap-timepicker'>
						<label>{@__ key="global_component.agenda.startHour"/}</label>
                		<div class='input-group'>
                			<div class='input-group-addon'>
                				<i class='fa fa-clock-o'></i>
                			</div>
                			<input class='form-control input timepicker' id="modalCreateStartTime" type='text' />
                		</div>
                	</div>
                	<div style="margin-top: 10px" class='bootstrap-timepicker'>
						<label>{@__ key="global_component.agenda.endHour"/}</label>
                		<div class='input-group'>
                			<div class='input-group-addon'>
                				<i class='fa fa-clock-o'></i>
                			</div>
                			<input class='form-control input timepicker' id="modalCreateEndTime" type='text' />
                		</div>
                	</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" id="createEvent" >Sauvegarder</button>
					<button type="button" class="btn btn-default" data-dismiss="modal">Annuler</button>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="eventUpdateModal" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
					<h4 class="modal-title" id="myModalLabel">Modifier un évenement</h4>
				</div>
				<div class="modal-body">
					<input type="hidden" id="modalUpdateEventID" />
					<input type="hidden" id="modalUpdateID" />
                	<select style="width: 100%;" class="form-control selectCategoryColor" id="modalUpdateCategory">
                		<option data-backgroundcolor="#CCCCCC" value="">{@__ key="global_component.agenda.no_category"/}</option>
						{#categories}
							<option data-backgroundcolor="{f_color}" value="{id}">{f_label}</option>
						{/categories}
					</select>
					<div style="margin-top: 10px;width: 100%;" class="input-group">
						<input type="text" id="modalUpdateTitle" placeholder='{@__ key="entity.CODE_NAME_EVENT_LOWER.f_title"/}' class="form-control" autofocus/>
					</div>
					<div style="margin-top: 10px" class='bootstrap-timepicker'>
						<label>{@__ key="entity.CODE_NAME_EVENT_LOWER.f_all_day"/}</label><br>
						<input class='form-control input' id="updateEventAllDayCheckbox" type='checkbox'>
                	</div>
                	<div style="margin-top: 10px" class='bootstrap-timepicker'>
						<label>{@__ key="global_component.agenda.startHour"/}</label>
                		<div class='input-group'>
                			<div class='input-group-addon'>
                				<i class='fa fa-clock-o'></i>
                			</div>
                			<input class='form-control input timepicker' id="modalUpdateStartTime" type='text' />
                		</div>
                	</div>
                	<div style="margin-top: 10px" class='bootstrap-timepicker'>
						<label>{@__ key="global_component.agenda.endHour"/}</label>
                		<div class='input-group'>
                			<div class='input-group-addon'>
                				<i class='fa fa-clock-o'></i>
                			</div>
                			<input class='form-control input timepicker' id="modalUpdateEndTime" type='text' />
                		</div>
                	</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" id="updateEvent" >Sauvegarder</button>
					<button type="button" class="btn btn-danger btn-confirm" id="deleteEvent" data-dismiss="modal">Supprimer</button>
					<button type="button" class="btn btn-default" data-dismiss="modal">Annuler</button>
				</div>
			</div>
		</div>
	</div>
{/content}

{<custom_js}
	<script src='/js/UI/1.12.1/jquery-ui.min.js'></script>
	<script src='/js/plugins/fullcalendar/fullcalendar.min.js'></script>
	<script src='/js/plugins/fullcalendar/script.js'></script>
	<script src='/js/plugins/fullcalendar/locale-all.js'></script>
	<script src='/js/plugins/fullcalendar/scheduler.js'></script>
	<script>var calendarEvents = [];</script>
	{#events}
		<script>var resourceIdsArray = [];</script>
		{#.ressourceIds}
			<script>resourceIdsArray.push({.})</script>
		{/.ressourceIds}
		<script>calendarEvents.push({eventId:{eventId}, title: "{title}", start: moment.utc("{start}").format("YYYY-MM-DD HH:mm:ss"), end: moment.utc("{end}").format("YYYY-MM-DD HH:mm:ss"), allDay:"{allDay}", backgroundColor: "{backgroundColor}", borderColor: "{backgroundColor}", idCategory: "{idCategory}", resourceIds: resourceIdsArray});</script>
	{/events}
	<script>var usersRessources = [];</script>
	{#users}
		<script>usersRessources.push({id:{id}, title: "{f_login}"});</script>
	{/users}
	<script type="text/javascript">
		$(document).ready(function() {

			$("*").tooltip({
				disabled: true
			});

			$('.modal').on('shown.bs.modal', function() {
				$(this).find('[autofocus]').focus();
			});

			if(lang_user == "fr-FR"){
				var currentLocal = "fr";
				var ressourceName = "Utilisateurs";
				var buttonTextObj = {
					today: 'Aujourd\'hui',
		            month: 'Mois',
		            week: 'Semaine',
		            day: 'Jour',
		            customTimelineDay: "Timeline/Jour",
		            customTimelineWeek: "Timeline/Semaine"
		        };
			} else{
				var currentLocal = "en";
				var ressourceName = "Users";
				var buttonTextObj = {
					today: 'Today',
		            month: 'Month',
		            week: 'Week',
		            day: 'Day',
		            customTimelineDay: "Timeline/Day",
		            customTimelineWeek: "Timeline/Week"
		        };
			}

			/* Full calendat init */
			$('#calendar').fullCalendar({
				schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
				locale: currentLocal,
				header: {
					left: 'prev,next today',
					center: 'title',
					right: 'month,agendaWeek,customTimelineDay,customTimelineWeek'
				},
				buttonIcons: {
					prev: "left-single-arrow",
		            next: "right-single-arrow"
				},
				views: {
					customTimelineDay: {
						type: 'timelineDay',
						minTime: "07:00:00",
						maxTime: "19:00:00"
					},
					customTimelineWeek: {
						type: 'timelineWeek',
						slotDuration: "24:00:00"
					}
				},
		        buttonText: buttonTextObj,
				navLinks: false,
				editable: true,
				eventLimit: true,
				droppable: true,
				resourceAreaWidth:"15%",
				defaultTimedEventDuration: "04:00:00",
        		timezone: 'UTC',
		        eventReceive: function(event){

		        	/*event.end is null, so set it to start + the number of hours you want*/
		        	event.end = moment.utc(event.start).add(4, "h");

		        	/* Convert into good SQL format */
		        	var startDate = moment.utc(event.start).format("YYYY-MM-DD HH:mm:ss");
        			var endDate = moment.utc(event.end).format("YYYY-MM-DD HH:mm:ss");

		        	var ajaxData = {
		        		title: event.title,
		        		allday: event.allDay,
		        		start: startDate,
		        		end: endDate,
		        		idCategory: event.idCategory,
		        		idUser: event.resourceId || null
		        	};

		        	$.ajax({
						url : '/URL_ROUTE/add_event',
						type : 'POST',
						data : JSON.stringify(ajaxData),
						dataType : 'json',
						contentType: "application/json",
						context: this,
						success: function (data) {
							/*event.url = "/URL_EVENT/show?id="+data.idEvent;*/
							event.eventId = data.idEvent;
							$('#calendar').fullCalendar('updateEvent', event);
						},
						error: function (error) {
							console.log(error);
						}
					});
		        },
		        eventResize: function(event){

		        	/* Convert into good SQL format */
		        	var startDate = moment(event.start).format("YYYY-MM-DD HH:mm:ss");
        			var endDate = moment(event.end).format("YYYY-MM-DD HH:mm:ss");

		        	var ajaxData = {
		        		eventId: event.eventId,
		        		start: startDate,
		        		end: endDate
		        	};

		        	$.ajax({
						url : '/URL_ROUTE/resize_event',
						type : 'POST',
						data : JSON.stringify(ajaxData),
						dataType : 'json',
						contentType: "application/json",
						context: this,
						error: function (error) {
							console.log(error);
						}
					});
		        },
		        eventDrop: function(event){
		        	/* Convert into good SQL format */
		        	var startDate = moment.utc(event.start).format("YYYY-MM-DD HH:mm:ss");
        			if(event.end == null)
		        		event.end = moment.utc(event.start).add(4, "h");
        			var endDate = moment.utc(event.end).format("YYYY-MM-DD HH:mm:ss");

		        	var ajaxData = {
		        		eventId: event.eventId,
		        		start: startDate,
		        		end: endDate,
		        		idUser: event.resourceId || null,
		        		idUsers: event.resourceIds || null
		        	};

		        	$.ajax({
						url : '/URL_ROUTE/update_event_drop',
						type : 'POST',
						data : JSON.stringify(ajaxData),
						dataType : 'json',
						contentType: "application/json",
						context: this,
						error: function (error) {
							console.log(error);
						}
					});
		        },
		        eventClick: function(calEvent, jsEvent, view) {
					$("#modalUpdateEventID").val(calEvent.eventId);
					$("#modalUpdateID").val(calEvent._id);
					$("#modalUpdateTitle").val(calEvent.title);
					if(calEvent.allDay){
						$('#updateEventAllDayCheckbox').iCheck('check');
					} else {
						$('#updateEventAllDayCheckbox').iCheck('uncheck');
						$("#modalUpdateStartTime").val(moment(calEvent.start).format("HH:mm"));
						$("#modalUpdateEndTime").val(moment(calEvent.end).format("HH:mm"));
					}
					if(calEvent.idCategory != 0)
						$("#modalUpdateCategory").val(calEvent.idCategory).trigger("change");
					$('#eventUpdateModal').modal('show');
				},
				dayClick: function(date, jsEvent, view, ressources) {
					$("#modalCreateStartDate").val(date._d);
					/* Get the start hours when the user clicked in the calendar */
					$("#modalCreateStartTime").val(moment.utc(date._d).format("HH:mm"));
					/* Add 4 hours to default end time in create modal */
					$("#modalCreateEndTime").val(moment.utc(date._d).add(4, "hours").format("HH:mm"));

					$("#modalCreateUser").val(null);
					if(typeof ressources !== "undefined"){
						$("#modalCreateUser").val(ressources.id)
					}

					if($("#modalCreateStartTime").val() == "00:00"){
						/* If start date is 00:00 then we considered that the event is all day, so check allDay checkbox */
						$('#createEventAllDayCheckbox').iCheck('check');
					} else{
						$('#createEventAllDayCheckbox').iCheck('uncheck');
					}
					$("#modalCreateTitle").val("");
					$("#modalCreateCategory").val("").trigger("change");
					$('#eventCreateModal').modal('show');
				},
		        resourceLabelText: ressourceName,
				resources: usersRessources,
				events: calendarEvents
			});

			/* Create event modal, all day checkbox managment */
			$(document).on("ifChanged", "#createEventAllDayCheckbox", function(){
				/* Disable start & end timepicker depend allDay checkbox state */
				if($(this).iCheck('update')[0].checked){
					$("#modalCreateStartTime").prop("disabled", true);
					$("#modalCreateEndTime").prop("disabled", true);
				} else {
					$("#modalCreateStartTime").prop("disabled", false);
					$("#modalCreateEndTime").prop("disabled", false);
				}
			});

			/* Update event modal, all day checkbox managment */
			$(document).on("ifChanged", "#updateEventAllDayCheckbox", function(){
				/* Disable start & end timepicker depend allDay checkbox state */
				if($(this).iCheck('update')[0].checked){
					$("#modalUpdateStartTime").prop("disabled", true);
					$("#modalUpdateEndTime").prop("disabled", true);
				} else {
					$("#modalUpdateStartTime").prop("disabled", false);
					$("#modalUpdateEndTime").prop("disabled", false);
				}
			});

			$(document).on("click", "#deleteEvent", function(){
				var idEventToDelete = $("#modalUpdateEventID").val();
				var idEventCalendarToDelete = $("#modalUpdateID").val();
				$.ajax({
					url : '/URL_ROUTE/delete_event',
					type : 'POST',
					data : JSON.stringify({id: idEventToDelete}),
					dataType : 'json',
					contentType: "application/json",
					context: this,
					success: function (data) {
						$("#calendar").fullCalendar('removeEvents', idEventCalendarToDelete);
						$('#eventUpdateModal').modal('hide');
					},
					error: function (error) {
						console.log(error);
					}
				});
			});

			$(document).on("click", "#updateEvent", function(){
				var idEventToUpdate = $("#modalUpdateEventID").val();
				var idEventCalendarToDelete = $("#modalUpdateID").val();

				var newTitle = $("#modalUpdateTitle").val();
				var newCategory = $("#modalUpdateCategory").val();
				var newCategoryColor = $("#modalUpdateCategory").find("option:selected").data("backgroundcolor");
				var allDay = $("#updateEventAllDayCheckbox").iCheck('update')[0].checked ? true : false;

				var eventObj = $("#calendar").fullCalendar('clientEvents', idEventCalendarToDelete);

				var startDate = eventObj[0].start.format("YYYY-MM-DD HH:mm:ss").split(" ");
				var chosenTimeStart = moment($("#modalUpdateStartTime").val(), "HH:mm").format("HH:mm");
				var chosenTimeEnd = moment($("#modalUpdateEndTime").val(), "HH:mm").format("HH:mm");
				var newStartDate = startDate[0]+ " " + chosenTimeStart + ":00";
				var newEndDate = startDate[0]+ " " + chosenTimeEnd + ":00";

				if(!allDay && moment(newStartDate).diff(newEndDate) >= 0){
					toastr.error("Cannot set end date same or before start date !");
					return false;
				}

				$.ajax({
					url : '/URL_ROUTE/update_event',
					type : 'POST',
					data : {
						id: idEventToUpdate,
						f_title: newTitle,
						f_all_day: allDay,
						f_start_date: allDay ? startDate[0]+ " 00:00:00" : newStartDate,
						f_end_date: allDay ? startDate[0]+ " 00:00:00" : newEndDate,
						r_category: newCategory
					},
					context: this,
					success: function (data) {
						eventObj[0].allDay = allDay;
						eventObj[0].start = allDay ? moment.utc(startDate[0]+ " 00:00:00") : moment.utc(newStartDate);
						eventObj[0].title = newTitle;
						eventObj[0].idCategory = newCategory;
						eventObj[0].backgroundColor = newCategoryColor;
						eventObj[0].borderColor = newCategoryColor;
						$('#calendar').fullCalendar('updateEvent', eventObj[0]);
						/* Little trick to set end date */
						eventObj[0].end = allDay ? moment.utc(startDate[0]+ " 00:00:00") : moment.utc(newEndDate);
						$('#calendar').fullCalendar('updateEvent', eventObj[0]);
						$('#calendar').fullCalendar("refetchEvents");
						$('#eventUpdateModal').modal('hide');
					},
					error: function (error) {
						console.log(error);
					}
				});
			});

			$(document).on("click", "#createEvent", function(){

				var newTitle = $("#modalCreateTitle").val();
				var newCategory = $("#modalCreateCategory").val();
				var newCategoryColor = $("#modalCreateCategory").find("option:selected").data("backgroundcolor");
				var allDay = $("#createEventAllDayCheckbox").iCheck('update')[0].checked ? true : false;

				var startDate = moment($("#modalCreateStartDate").val()).format("YYYY-MM-DD HH:mm:ss").split(" ");
				var chosenTimeStart = moment($("#modalCreateStartTime").val(), "HH:mm").format("HH:mm");
				var chosenTimeEnd = moment($("#modalCreateEndTime").val(), "HH:mm").format("HH:mm");
				var newStartDate = startDate[0]+ " " + chosenTimeStart + ":00";
				var newEndDate = startDate[0]+ " " + chosenTimeEnd + ":00";

				var idUser = null;
				if($("#modalCreateUser").val() != null && $("#modalCreateUser").val() != ""){
					idUser = $("#modalCreateUser").val();
				}

				if(!allDay && moment(newStartDate).diff(newEndDate) >= 0){
					toastr.error("Cannot set end date same or before start date !");
					return false;
				}

				var ajaxData = {
					title: newTitle,
					start: allDay ? startDate[0]+ " 00:00:00" : newStartDate,
					end: allDay ? startDate[0]+ " 00:00:00" : newEndDate,
					allday: allDay,
					idCategory: newCategory || null,
					idUser: idUser
				};

				$.ajax({
					url : '/URL_ROUTE/add_event',
					type : 'POST',
					data : JSON.stringify(ajaxData),
					dataType : 'json',
					contentType: "application/json",
					context: this,
					success: function (data) {
						var newEvent = {eventId: data.idEvent, title: newTitle, start: newStartDate, end: newEndDate,
							allDay: allDay, backgroundColor: newCategoryColor, borderColor: newCategoryColor,
							idCategory: ajaxData.idCategory, resourceId: idUser};
						$('#calendar').fullCalendar('renderEvent', newEvent, true);
						$('#eventCreateModal').modal('hide');
					},
					error: function (error) {
						console.log(error);
					}
				});
			});

			/* Sidebar menu highlighting */
			var url = window.location.href;
			var current_url = url.split("/");
			var mainMenu = current_url[3];
			$("a[href='/"+mainMenu+"']").css("color", "#3c8dbc");
		});
	</script>
{/custom_js}
