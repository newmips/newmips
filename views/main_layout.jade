doctype html
html
	head
		meta(charset='UTF-8')
		title #{__("app.name")}
		meta(content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no', name='viewport')

		// ---------------- JAVASCRIPT ---------------- //
		// Bootstrap 3.0.2
		link(href='/css/Bootstrap/bootstrap.min.css', rel='stylesheet', type='text/css')
		// Font Awesome
		link(href='/css/Fonts/font-awesome.min.css', rel='stylesheet', type='text/css')
		// Ionicons
		link(href='/css/ionicons.min.css', rel='stylesheet', type='text/css')
		// Demo style for icons
		link(href='/css/AdminLTE/icons.css', rel='stylesheet', type='text/css')
		// Theme style
		link(href='/css/AdminLTE/AdminLTE.css', rel='stylesheet', type='text/css')
		// Toastr
		link(href='/css/toastr/toastr.min.css', rel='stylesheet', type='text/css')
		// Select2
		link(href='/css/select2/css/select2.min.css', rel='stylesheet', type='text/css')
		// iCheck
		link(href='/css/iCheck/flat/blue.css', rel='stylesheet', type='text/css')
		script(src='/js/Newmips/navigation.js', type='text/javascript')
		// Slack chat
		link(rel="stylesheet", href="/css/slack/slack-chat.css")
		link(rel="stylesheet", href="/css/slack/skin-chat.css")

		block custom_css

	body.skin-blue
		//Give the user_lang the client
		script.
			var user_lang = '#{getLang()}';
		header.header
			.liner
		aside.right-side
			section.content-header
				block header
			section.content
				block content

		block message-modal

		// ---------------- JAVASCRIPT ---------------- //
		// jQuery 2.0.2
		script(src='/js/jQuery/jquery.min.js')
		// Bootstrap
		script(src='/js/Bootstrap/bootstrap.min.js', type='text/javascript')
		// Toastr
		script(src='/js/plugins/toastr/toastr.min.js', type='text/javascript')
		// Select2
		script(src="/js/plugins/select2/dist/js/select2.full.min.js", type='text/javascript')
		// Slack
		if (isSlackChatEnabled)
			script(src="/js/plugins/moment.js", type='text/javascript')
			script(src="/js/plugins/slack/slack-chat.js", type='text/javascript')
			script.
				/***************** Slack chat ******************/
				/* ID des user de Slack à inviter dans la channel crée */
				var usersToInvite = ["U1GLD90GK", "U1GARP962", "U1GCYEKPX", "U1HD3C60L", "U28GY8LLW", "U3M2P085C"];
				/*var usersToInvite = [];*/

				var userId = localStorage.getItem("dixit_id_user_slack");

				if(userId == null){
					localStorage.setItem("dixit_id_user_slack", Math.random()*1000000)
					userId = localStorage.getItem("dixit_id_user_slack");
				}

				var userUrlName = window.location.href.replace(/(^\w+:|^)\/\//, '');
				var slackChatOptions = {
					apiToken: '#{slackApiToken}', /*#Slack Auth token. Required.*/
					channelId: '',      /*#Slack channel ID. Required.*/
					user: 'Newmips User',           /*name of the user. Required.*/
					userLink: '',       /*link to the user in the application - shown in #Slack*/
					userImg: '',        /*image of the user*/
					userId: userId,         /*id of the user in the application*/
					defaultSysImg: 'img/logo/logo_newmips.png',         /*image to show when the support team replies*/
					defaultSysUser: 'Newmips',                /*Required*/
					queryInterval: 3000,
					chatBoxHeader: "Need help? Talk to our support team right here",
					slackColor: "#36a64f",
					messageFetchCount: 100,
					botUser: userUrlName, /*username to post to #Slack. Required.*/
					sendOnEnter: true,
					disableIfAway: false,
					elementToDisable: null,
					heightOffset: 75,
					debug: false,
					webCache: false,
					privateChannel: true,
					serverApiGateway: '/set_slack',
					useUserDetails: true,
					defaultInvitedUsers: usersToInvite
				}

				$("#message-box").slackChat(slackChatOptions);
		else
			script.
				$("#message-box").click(function() {
					var chatDisabledMsg = '#{__("preview.help-disabled")}';
					toastr.info(chatDisabledMsg);
				});
		script.
			var toastrArray = [];
		if toastr
			- var toastrString = JSON.stringify(toastr).replace('\'', '&#39;');
			script.
				toastrArray = JSON.parse('!{toastrString}');
		script.
			$(document).ready(function(){

				try{
					toastr.options = {
						"closeButton": false,
						"debug": false,
						"newestOnTop": false,
						"progressBar": true,
						"positionClass": "toast-bottom-left",
						"preventDuplicates": false,
						"onclick": null,
						"showDuration": "300",
						"hideDuration": "1000",
						"timeOut": "10000",
						"extendedTimeOut": "1000",
						"showEasing": "swing",
						"hideEasing": "linear",
						"showMethod": "fadeIn",
						"hideMethod": "fadeOut"
					};

					for (var i = 0; i < toastrArray.length; i++) {
						setTimeout(function(toast){
							switch(toast.level){
								case "info":
									toastr.info(toast.message);
									break;
								case "success":
									toastr.success(toast.message);
									break;
								case "warning":
									toastr.warning(toast.message);
									break;
								case "error":
									toastr.error(toast.message);
									break;
							}
						}(toastrArray[i]), (1000*i));
					}
				} catch(e){
					console.log(e);
					toastr = {success: function(){return true;}, info: function(){return true;}, error: function(){return true;}, warning: function(){return true;}};
				}
			});

		block custom_js