extends ../main_layout
block header
	.row
		.col-header.col-xs-12.col-sm-6.col-md-6.col-lg-8
			h1
				a(href="/")
					img(src="/img/FAVICON-GRAND-01.png", alt="Newmips Logo", style="width:44px;display:inline;margin-left:15px; margin-right:15px;")
				| #{__("menu.preview")}
				small #{__("menu.module")}

		.col-xs-12.col-sm-6.col-md-6.col-lg-4
			.btn-group.pull-right(role="group")
				a.btn.btn-default(href='/default/home')
					i.fa.fa-home(style="margin-right:5px;")
					| #{__("menu.home")}
				a.btn.btn-default(href='/account')
					i.fa.fa-user(style="margin-right:5px;")
					| #{__("menu.account")}
				a.btn.btn-default.pull-right(href='/logout')
					i.fa.fa-sign-out.fa-md &nbsp;&nbsp;
					span #{__("button.disconnect")}

		.modal.fade#modalsetlogo(tabindex='-1', role='dialog', aria-labelledby='Set logo')
			.modal-dialog.modal-lg(role='document')
				.modal-content
					.modal-header
						button.close(type='button', data-dismiss='modal', aria-label='Close')
							span(aria-hidden='true') Ã—
						h4.modal-title #{__("preview.logo.title")}
					.modal-body
						p.text-center
							img(src='/img/avatar.png', alt="Mipsy", style="display:block;margin:auto;width: 150px;")
							br
							| #{__("preview.logo.text")}
							br
							br
							.col-xs-12(data-field='set_logo')
								.form-group
									label(for='set_logo') Logo
									#set_logo_dropzone.dropzone.dropzone-field(data-storage='local', data-type='picture', data-entity='logo')
									input#set_logo_dropzone_hidden(type='hidden', name='set_logo', value='')
							br
							br
							.col-xs-12.text-center
								button.btn.btn-success#addLogo
									| #{__("button.add")}
					.modal-footer
						button.btn.btn-default(type='button', data-dismiss='modal') #{__("button.close")}

block custom_css
	// Dropzone
	link(href='/css/dropzone/dropzone.min.css', rel='stylesheet', type='text/css')
	// CodeMirror
	link(href='/css/codemirror/codemirror.css', rel='stylesheet', type='text/css')
	link(href='/css/codemirror/customcodemirror.css', rel='stylesheet', type='text/css')
	// Addons CSS
	link(href='/js/plugins/grid-editor/dist/grideditor.css', rel='stylesheet', type='text/css')
	link(href='/js/plugins/grid-editor/dist/grideditor-font-awesome.css', rel='stylesheet', type='text/css')
	link(href='/js/plugins/codemirror/addon/dialog.css', rel='stylesheet', type='text/css')
	link(href='/js/plugins/codemirror/addon/fullscreen.css', rel='stylesheet', type='text/css')
	link(href='/js/plugins/codemirror/addon/foldgutter.css', rel='stylesheet', type='text/css')
	// Slack chat
	link(rel="stylesheet", href="/css/slack/slack-chat.css")
	link(rel="stylesheet", href="/css/slack/skin-chat.css")
	// Animated CSS
	link(rel="stylesheet", href="/css/animated.css")
	// Dynamic Writing
	style.
		.dynamic-writing{
			display: none;
		}

block content
	#tabs.nav-tabs-custom(style="margin-bottom:0px;")
		ul.nav.nav-tabs#primary-navtabs(role="tablist")
			li.active
				a(role="primaryTab", data-toggle='tab', href='#preview') #{__("preview.title")}
			li
				a(role="primaryTab", data-toggle='tab', href='#ui-editor') #{__("menu.ui_editor")}
			li
				a#start-editor(role="primaryTab", data-toggle='tab', href='#editor') #{__("menu.editor")}
			li
				a#start-logs(role="primaryTab", data-toggle='tab', href='#logs') #{__("menu.logs")}

		.tab-content
			#preview.tab-pane.fade.in.active
				.row
					.col-xs-12.col-md-8.col-lg-9
						form#previewForm(action='/application/preview', method='post')
							.input-group.ui-widget(style="margin-bottom:7px;")
								.input-group-btn
									a.btn.btn-default(href="#", id="btn-speech", alt="Enregistrer une instruction")
										i.fa.fa-microphone.fa-md
								input.form-control(id='instruction', name='instruction', type='text', autocomplete="off", autofocus, required, value='', x-webkit-speech, placeholder=__('preview.execute'))
								input.form-control.input(id='iframe_url', name='iframe_url', type='hidden', value=iframe_url)
								input.form-control.input(id='chat', name='chat', type='hidden', value=JSON.stringify(chat))
								.input-group-btn
									button.btn.btn-success#execute_instruction
										| #{__("button.execute")}
						.row
							.col-xs-12
								.box-body
									.responsive-iframe
										if iframe_url != -1
											iframe(id="iframe", height="764px", width="600px", src=iframe_url, webkitAllowFullScreen, mozallowfullscreen, allowFullScreen, style="height:764px;border: 1px solid grey;border-radius: 3px;")
										div(id="loadingIframe", style="position: absolute;top: 0;left: 0;width: 100%;height: 764px;background-color: rgba(0, 0, 0, 0.25);display:none;")
											img.animated.pulse.infinite(src='/img/LOGO-PNG-01-min.png', alt='Loading', style="display:block;margin: auto;margin-top:300px;width:200px;")
										br
					.col-xs-12.col-md-4.col-lg-3
						// Chat box
						.box.box-solid(style="margin-bottom:10px;")
							.box-header
								h4.box-title
									i.fa.fa-comments-o
									|  Instructions
							br
							#chat-box.box-body.chat(style="height:450px;max-height:450px;overflow-y:scroll;")
								// Each item has : user, dateEmission, content
								each msg in chat.items
									.item
										if (msg.user == "Mipsy")
											img(src='/img/avatar.png', alt='user image')
										else
											img(src='/img/user.png', alt='user image')
										p.message
											a.name(href='#')
												small.text-muted.pull-right
													| #{msg.dateEmission}
												if (msg.user == "Mipsy")
													| Mipsy
												else
													| #{profile.login}
											if (msg.content == "chat.welcome")
												span.dynamic-writing
													| !{__(msg.content, msg.params)}
											else
												span.standard-writing
													| !{__(msg.content, msg.params)}
									hr
								//.box-footer
									.row
										.col-xs-1
											a.btn.btn-default(href="#", id="btn-speech", alt="Enregistrer une instruction")
												i.fa.fa-microphone.fa-md
										.col-xs-11
											.input-group.ui-widget
												input.form-control(id='instruction', name='instruction', type='text', autocomplete="off", autofocus, value='' x-webkit-speech)
												input.form-control.input(id='iframe_url', name='iframe_url', type='hidden', value=iframe_url)
												input.form-control.input(id='iframe', name='iframe', type='hidden', value='true')
												input.form-control.input(id='chat', name='chat', type='hidden', value=JSON.stringify(chat))
												.input-group-btn
													button.btn.btn-success#execute_instruction
														| #{__("button.execute")}
						// Session
						.box.box-solid(style="margin-bottom:0px;")
							.box-header
								h4.box-title
									i.fa.fa-gear
									|  Session
							.box-body
								.callout.callout-warning
									if (session.project.id_project != null)
										| #{__("project.label")} :
										b.sessionProjectInfo
											|&nbsp;#{session.project.id_project} - #{session.project.name_project}
									else
										| #{__("project.label")} :
										b.sessionProjectInfo
											|&nbsp;#{__("preview.session.noProject")}
									br
									if (session.application.id_application != null)
										| #{__("application.label")} :
										b.sessionApplicationInfo
											|&nbsp;#{session.application.id_application} - #{session.application.name_application}
									else
										| #{__("application.label")} :
										b.sessionApplicationInfo
											|&nbsp;#{__("preview.session.noApplication")}
									br
									if (session.module.id_module != null)
										| #{__("module.label")} :
										b.sessionModuleInfo
											|&nbsp;#{session.module.id_module} - #{session.module.name_module}
									else
										| #{__("module.label")} :
										b.sessionModuleInfo
											|&nbsp;#{__("preview.session.noModule")}
									br
									if (session.data_entity.id_data_entity != null)
										| #{__("entity.label")} :
										b.sessionEntityInfo
											|&nbsp;#{session.data_entity.id_data_entity} - #{session.data_entity.name_data_entity}
									else
										| #{__("entity.label")} :
										b.sessionEntityInfo
											|&nbsp;#{__("preview.session.noEntity")}
							.box-footer
								.text-center
									a.btn.btn-app#restart-server(href="#")
										i.fa.fa-refresh
										|#{__("preview.reload")}
									if globalConf.env != 'cloud'
										a.btn.btn-app(target="_blank", href="https://github.com/newmips/newmips/issues/new")
											i.fa.fa-github
											|#{__("preview.issue-button")}
									else if globalConf.env == 'cloud' || globalConf.env == 'cloud_recette'
										div.btn.btn-app#message-box(title="", data-toggle="tooltip", data-original-title="Talk bubble")
											i.fa.fa-comment
											div(class="badge badge-danger slack-message-count", style="display: none;")
											|#{__("preview.help-button")}
									a.btn.btn-app(target="_blank", href="http://docs.newmips.com")
										i.fa.fa-book
										|#{__("button.documentation")}

			#ui-editor.tab-pane.fade.in(style="min-height:750px;")
				.row
					.col-xs-12.col-sm-2.sidebar
						h4
							| #{__("entity.label")} :

						select#entitySelect(name="entitySelect")
							option(default="true", value="")
								| #{__("ui_editor.select_entity")}
							for entity in entities
								option(value=entity.codeName)
									| #{entity.name}
						br
						ul#pages.sidebar-menu(style="display:none;")
							li.ui-state-default.treeview(style='display:block;')
								a(class='ui_editor_page' href='#' data-entity='' data-page='create')
									i.fa.fa-file
									| #{__("ui_editor.create_page")}
							li.ui-state-default.treeview(style='display:block;')
								a(class='ui_editor_page' href='#' data-entity='' data-page='update')
									i.fa.fa-file
									| #{__("ui_editor.update_page")}
							li.ui-state-default.treeview(style='display:block;')
								a(class='ui_editor_page' href='#' data-entity='' data-page='show')
									i.fa.fa-file
									| #{__("ui_editor.show_page")}
							li.ui-state-default.treeview(style='display:block;')
								a(class='ui_editor_page' href='#' data-entity='' data-page='print')
									i.fa.fa-file
									| #{__("ui_editor.print_page")}

					.col-xs-12.col-sm-10
						#ui_editor
						i#ui_editor_tips(style="display:none;") #{__("ui_editor.tips")}
						br
						br
						input#ui_editor_apply_all(type="checkbox", style="margin:0;vertical-align: bottom;position: relative;top: -1px;*overflow: hidden;margin-right:5px;display:none;")
						span#ui_editor_apply_all_span(style="display:none;") #{__("ui_editor.applyAll")}
						br
						br
						button#ui_editor_save.btn.btn-primary(style="display:none;")
							| #{__("button.save")}

			#editor.tab-pane.fade.in
				.row
					#codemirror-menu.col-xs-12.col-sm-2.sidebar
						h4
							| #{__("editor.folders")} :
						ul#sortable.sidebar-menu
							mixin parseObject(array)
								if array
									each file, key in array
										if (typeof file.path !== "undefined")
											li
												a.load-file(href='#', data-path=file.path, data-filename=file.title)
													i.fa.fa-file
													|  #{file.title}
										else if (typeof file.under !== "undefined")
											li.ui-state-default.treeview(style='display:block;')
												a(href='#')
													i.fa.fa-folder
													span #{file.title}
													i.fa.fa-angle-left.pull-right
												ul.treeview-menu
													+parseObject(file.under)
							+parseObject(workspaceFolder)
					#codemirror-editor.col-xs-12.col-sm-10
						h4
							| #{__("editor.legend")} :
						#tabs-editor.nav-tabs-custom(style="margin-bottom:0px;")
							ul.nav.nav-tabs#editor-navtabs(role="filelist")
						div(id="loadingEditorIframe", style="position: absolute;top: 0;left: 0;width: 100%;height: 764px;background-color: transparent;display:block;")
							img.animated.pulse.infinite(src='/img/FAVICON-GRAND-01.png', alt='Loading', style="display:block;margin: auto;margin-top:250px;width:125px;")
				br
				.row
					.col-xs-5.col-sm-offset-2
						button#update-file.btn.btn-primary(disabled="true") #{__("button.save")}
					.col-xs-5
						span.pull-right(style="margin-right:50px;")
							b
								| #{__("editor.change_theme")} :
						br
						select#select-theme.pull-right
							option(value="default") default
							option(value="3024-day") 3024-day
							option(value="3024-night") 3024-night
							option(value="abcdef") abcdef
							option(value="ambiance-mobile") ambiance-mobile
							option(value="ambiance") ambiance
							option(value="base16-dark") base16-dark
							option(value="base16-light") base16-light
							option(value="bespin") bespin
							option(value="blackboard") blackboard
							option(value="cobalt") cobalt
							option(value="colorforth") colorforth
							option(value="dracula") dracula
							option(value="duotone-dark") duotone-dark
							option(value="duotone-light") duotone-light
							option(value="eclipse") eclipse
							option(value="elegant") elegant
							option(value="erlang-dark") erlang-dark
							option(value="hopscotch") hopscotch
							option(value="icecoder") icecoder
							option(value="isotope") isotope
							option(value="lesser-dark") lesser-dark
							option(value="liquibyte") liquibyte
							option(value="material") material
							option(value="mbo") mbo
							option(value="mdn-like") mdn-like
							option(value="midnight") midnight
							option(value="monokai") monokai
							option(value="neat") neat
							option(value="neo") neo
							option(value="night") night
							option(value="panda-syntax") panda-syntax
							option(value="paraiso-dark") paraiso-dark
							option(value="paraiso-light") paraiso-light
							option(value="pastel-on-dark") pastel-on-dark
							option(value="railscasts") railscasts
							option(value="rubyblue") rubyblue
							option(value="seti") seti
							option(value="solarized") solarized
							option(value="the-matrix") the-matrix
							option(value="tomorrow-night-bright") tomorrow-night-bright
							option(value="tomorrow-night-eighties") tomorrow-night-eighties
							option(value="ttcn") ttcn
							option(value="twilight") twilight
							option(value="vibrant-ink") vibrant-ink
							option(value="xq-dark") xq-dark
							option(value="xq-light") xq-light
							option(value="yeti") yeti
							option(value="zenburn") zenburn

			#logs.tab-pane.fade.in
				.form-group
					.form-control#logs-content(name='answers', style="white-space: pre-line;height: 700px;overflow:auto;background:black;color:#FFF;")

block custom_js
	// UI-Editor
	//script(src='https://code.jquery.com/ui/1.12.1/jquery-ui.js', type='text/javascript')
	script(src='/js/UI/jquery-ui-1.12.1.js', type='text/javascript')
	script(src='/js/Newmips/newmips.grideditor.js', type='text/javascript')
	// Speech Recognition
	script(src='/js/Newmips/speechRecognition.js', type='text/javascript')
	// Slim scroll
	script(src='/js/plugins/jquery.slimscroll.min.js', type='text/javascript')
	// Sidebar
	script(src='/js/AdminLTE/sidebar.js', type='text/javascript')
	// Dropzone
	script(src='/js/plugins/dropzone/dropzone.min.js', type='text/javascript')
	script.
		var idApp = "#{idApp}";
	script(src='/js/Newmips/logo-instruction.js', type='text/javascript')
	// Dynamic Writing
	script(src='/js/Newmips/dynamic-writing.js', type='text/javascript')
	// Slack
	if (isSlackChatEnabled)
		script(src="/js/plugins/moment.js", type='text/javascript')
		script(src="/js/plugins/slack/slack-chat.js", type='text/javascript')
		script.
			/***************** Slack chat ******************/
			/* ID des user de Slack Ã  inviter dans la channel crÃ©e */
			var usersToInvite = ["U1GLD90GK", "U28GY8LLW", "U1GARP962", "U1GCYEKPX", "U1HD3C60L", "U6X4BDYM6"];
			var userId = localStorage.getItem("newmips_slack_id_user");

			if(userId == null){
				localStorage.setItem("newmips_slack_id_user", Math.random()*1000000)
				userId = localStorage.getItem("newmips_slack_id_user");
			}

			var userUrlName = window.location.href.replace(/(^\w+:|^)\/\//, '');
			var slackChatOptions = {
				apiToken: '#{slackApiToken}', /*#Slack Auth token. Required.*/
				channelId: '',      /*#Slack channel ID. Required.*/
				user: 'Newmips User',           /*name of the user. Required.*/
				userLink: '',       /*link to the user in the application - shown in #Slack*/
				userImg: '',        /*image of the user*/
				userId: userId,         /*id of the user in the application*/
				defaultSysImg: 'img/logo/newLogo.png',         /*image to show when the support team replies*/
				defaultSysUser: 'Newmips',                /*Required*/
				queryInterval: 3000,
				chatBoxHeader: "Need help? Talk to our support team right here",
				slackColor: "#36a64f",
				messageFetchCount: 100,
				botUser: userUrlName, /*username to post to #Slack. Required.*/
				sendOnEnter: true,
				disableIfAway: false,
				elementToDisable: null,
				heightOffset: 75,
				debug: false,
				webCache: false,
				privateChannel: true,
				serverApiGateway: '/set_slack',
				useUserDetails: true,
				defaultInvitedUsers: usersToInvite
			}

			$("#message-box").slackChat(slackChatOptions);
	else
		script.
			$("#message-box").click(function() {
				var chatDisabledMsg = '#{__("preview.help-disabled")}';
				toastr.info(chatDisabledMsg);
			});
	// Preview JS
	script(src='/js/Newmips/preview.js', type='text/javascript')